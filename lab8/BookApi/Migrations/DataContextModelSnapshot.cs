// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherApp.API.Models;

#nullable disable

namespace BookApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectShared.BookStore.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Dino Breitenberg",
                            Description = "Sports & Health maroon South Dakota Incredible Course CFA Franc BEAC Kina Bulgarian Lev Avon invoice",
                            Title = "Incredible Small"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Maximilian Luettgen",
                            Description = "e-commerce Direct bypassing sensor bandwidth Handmade Steel Car revolutionary Moldovan Leu Grocery channels",
                            Title = "1080p Cotton"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Camryn Gorczany",
                            Description = "Indonesia magenta Administrator Berkshire Bedfordshire Savings Account teal Shoes, Movies & Kids American Samoa Home Loan Account",
                            Title = "Coordinator Small"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Hailey Buckridge",
                            Description = "repurpose payment Universal Visionary Ergonomic Rubber Pizza Savings Account Inverse Gorgeous Wooden Mouse TCP Licensed Rubber Ball",
                            Title = "IB orange"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Sherman Johns",
                            Description = "Incredible Rubber Intranet Specialist reboot UAE Dirham Technician synergize front-end fuchsia",
                            Title = "open-source Grass-roots"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Maci Stracke",
                            Description = "Usability Fantastic Soft Fish teal copy Handcrafted Borders Team-oriented blockchains analyzer mobile",
                            Title = "RSS Netherlands Antilles"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Bennett Aufderhar",
                            Description = "Summit Licensed Senior deposit explicit Frozen 1080p HTTP moderator Generic",
                            Title = "Personal Loan Account overriding"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Andrew Metz",
                            Description = "Tasty Steel Towels Corporate Savings Account Personal Loan Account Function-based index Integration Checking Account copying Assimilated",
                            Title = "Refined Refined Granite Shoes"
                        },
                        new
                        {
                            Id = 9,
                            Author = "Gregoria Okuneva",
                            Description = "Clothing, Home & Books invoice Sri Lanka Rupee Identity deposit Creative Facilitator Sudanese Pound e-tailers redundant",
                            Title = "array Computers, Grocery & Books"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Lori Cormier",
                            Description = "parse Identity Investment Account incentivize value-added Vermont Intranet RAM Industrial synthesizing",
                            Title = "Electronics & Health Representative"
                        });
                });

            modelBuilder.Entity("ProjectShared.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1234145134,
                            DateCreated = new DateTime(2024, 1, 4, 10, 22, 49, 573, DateTimeKind.Local).AddTicks(7515),
                            Email = "admin@admin",
                            PasswordHash = new byte[] { 26, 45, 226, 34, 130, 50, 128, 46, 54, 113, 49, 12, 236, 55, 67, 247, 188, 166, 21, 53, 255, 179, 56, 245, 80, 131, 82, 237, 144, 63, 104, 19, 150, 242, 148, 101, 90, 112, 92, 14, 202, 88, 243, 23, 40, 200, 60, 239, 111, 248, 99, 189, 20, 224, 155, 112, 52, 214, 174, 20, 97, 49, 196, 135 },
                            PasswordSalt = new byte[] { 243, 80, 61, 36, 228, 90, 178, 5, 140, 71, 11, 126, 154, 18, 51, 187, 255, 100, 192, 200, 149, 185, 147, 201, 76, 69, 168, 193, 9, 189, 151, 199, 83, 233, 252, 204, 146, 178, 223, 104, 97, 41, 12, 49, 191, 50, 122, 98, 24, 176, 20, 83, 144, 241, 71, 230, 38, 97, 44, 240, 91, 226, 140, 100, 89, 128, 19, 158, 12, 38, 144, 118, 57, 132, 93, 139, 192, 3, 193, 231, 168, 135, 144, 27, 7, 14, 166, 27, 12, 3, 234, 216, 42, 130, 17, 103, 181, 213, 208, 129, 48, 217, 42, 45, 48, 7, 137, 16, 140, 132, 45, 32, 60, 117, 195, 207, 102, 109, 206, 76, 57, 122, 134, 148, 141, 238, 9, 27 },
                            Role = "Admin",
                            Username = "Admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
